name: PR Tests

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  test:
    if: '!github.event.pull_request.draft'
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Wait for PostgreSQL
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Run linting (if available)
      run: npm run lint || echo "No linting configured"
      continue-on-error: true

    - name: Run tests
      run: npm run test:ci
      env:
        NODE_ENV: test
        TEST_POSTGRES_HOST: localhost
        TEST_POSTGRES_PORT: 5432
        TEST_POSTGRES_USER: postgres
        TEST_POSTGRES_PASSWORD: postgres
        TEST_POSTGRES_ADMIN_DB: postgres

    - name: Comment on PR with test results
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '‚ùå Tests failed on this PR. Please check the test results and fix any issues before merging.'
          })